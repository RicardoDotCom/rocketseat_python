Quando foi feito?

O padrão MVC foi introduzido por Trygve Reenskaug, um engenheiro de software norueguês, em 1978.
Ele apresentou o padrão em um artigo chamado "Aplications Programming in Smaltalk-80: How to use Model-View_Controller".

O que é?

É uma arquitetura de software amplamente utilizada para organizar e estruturar o códiogo em sistemas que envolvem interface de usuário
e lógica de negócios. Ele sepra as responsabilidades em três componentes principais: Model(Modelo), View(Visão) e Controller(Controlador).

Responsabilidades do Padrão MVC

Views

A view é responsável por apresentar os dados de resposta e por lidar com a interface de interação com o usuário.

Controllers

O controller recebe as entradas de usuário da View, processa essa entrada e atualiza o Model conforme necessário. 
O Controller armazena a regra de negócio do sistema

Model

O Model é responsável por armazenar e gerenciar os dados do aplicativo, bem como fornecer métodos para acessar e 
manipular esses dados.

Ambientes Virtuais

Utilizaremos o VIRTUALENV do python pois ele nos possibilita que criemos um ambiente virtual para os projetos
facilitando assim que as bibliotecas que forem instadas não entrem em conflito com outras instaladas na maquina, 
para consulta acesse: 

https://docs.python.org/pt-br/3.13/library/venv.html
https://pypi.org/project/virtualenv/

Pylint

O Pylint é utilizado para monitorar a codificação sugerindo boas práticas para o projeto e criando convenções
para que qdo atuando em equipe todos os programadores sigam as mesmas convenções

https://pypi.org/project/pylint/

Para configurar o pylint iremos realizar o segunite comando no terminal dentro da pasta do projeto

pylint --generate-rcfile > .pylintrc 

no windows pode acontecer de ter alguns problemas devido ao UTF-8  para isso execute o comando

pylintrc --generate-rcfile | out-file -encoding utf8 .pylintrc

ele cria um arquivo de config no projeto

Pre-Commit

É uma lib que executa uma ação antes que o commit seja realizado, mas para que ela funcione corretamente é necessário
que o git tenha sido iniciado na pasta do projeto

acesse: 
https://pre-commit.com/

Neste projeto ele será vinculado ao pylint para que antes de "commitar" as alterações será excutado o pylint para 
validar se o que foi desenvolvido está dentro das convenções do projeto


Projeto que será desenvolvido

API para adoção de PETs! (BACKEND)

Funcionalidades:
    Registrar uma pessoa adotando um PET
    Listar todos os PETs
    Deletar um PET
    Retornar informações de uma pessoa com o seu PET